---
const countries = [
  "Honduras","Colombia","Uruguay","Panamá","Argentina","Brasil","Ecuador","Paraguay","Perú",
];
const total = countries.length;
---

<section id="geo" class="relative overflow-hidden bg-white">
  <!-- Decor de fondo (sutil, usando colores de marca) -->
  <div class="pointer-events-none absolute inset-0">
    <div class="absolute -top-32 -right-24 h-72 w-72 rounded-full bg-[#B41A1D]/10 blur-3xl"></div>
    <div class="absolute -bottom-40 -left-24 h-96 w-96 rounded-full bg-[#575756]/10 blur-3xl"></div>
    <!-- patrón de puntos -->
    <div class="absolute inset-0 opacity-[0.08] [background-image:radial-gradient(currentColor_1px,transparent_1.5px)] [background-size:18px_18px] text-[#575756]"></div>
  </div>

  <div class="relative mx-auto max-w-7xl px-4 md:px-6 py-16 md:py-24">
    <header class="max-w-3xl">
      <p class="text-xs tracking-widest uppercase text-[#575756] flex items-center gap-2">
        <span class="inline-block h-[3px] w-8 rounded bg-[#B41A1D]"></span> Presencia regional
      </p>
      <h2 class="heavitas text-3xl md:text-5xl leading-tight mt-2 text-[#B41A1D]">
        ¿Dónde estamos?
      </h2>
      <p class="mt-3 text-[#575756] md:text-lg">
        Proyectos y operaciones en Latinoamérica. Ya somos
        <span id="geo-count" data-count={total} class="font-semibold text-[#B41A1D]">{total}</span>
        países (y creciendo).
      </p>
    </header>
<!-- Chips: scroll-snap en mobile, grid en desktop -->
<div class="mt-8">
  <ul
    class="flex flex-nowrap snap-x snap-mandatory gap-2 overflow-x-auto pb-2 pr-6 scroll-px-4
           md:grid md:grid-cols-3 lg:grid-cols-4 md:overflow-visible md:gap-3"
    role="list"
    aria-label="Listado de países con presencia"
  >
    {countries.map((c) => (
      <li class="snap-center flex-none md:snap-none">
        <button
          class="geo-chip group inline-flex shrink-0 items-center gap-2 rounded-full
                 border border-[#575756]/20 bg-white/90 px-4 py-2 text-sm text-[#575756]
                 shadow-sm ring-1 ring-black/5 backdrop-blur transition
                 hover:translate-y-[-1px] hover:shadow-md
                 focus:outline-none focus-visible:ring-2 focus-visible:ring-[#B41A1D]/60"
          data-country={c}
          aria-label={`País: ${c}`}
        >
          <span class="dot inline-block h-2 w-2 rounded-full bg-[#B41A1D] transition group-hover:scale-110"></span>
          <span class="font-medium">{c}</span>
          <span class="ml-1 hidden text-[10px] uppercase tracking-widest text-[#B41A1D]/80 sm:inline">LATAM</span>
        </button>
      </li>
    ))}
  </ul>
</div>


    <!-- mini leyenda -->
    <div class="mt-6 flex items-center gap-3 text-xs text-[#575756]">
      <span class="inline-block h-2 w-2 rounded-full bg-[#B41A1D]"></span>
      <span>Proyección escalable: más países serán añadidos este año.</span>
    </div>
  </div>


</section>

<script>
  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  // Tipado TS
  const chips = document.querySelectorAll<HTMLButtonElement>(".geo-chip");
  const dots  = document.querySelectorAll<HTMLSpanElement>(".geo-chip .dot");
  const countEl = document.getElementById("geo-count") as HTMLSpanElement | null;

  // Animación de entrada (stagger)
  chips.forEach((el, i) => {
    gsap.from(el, {
      opacity: 0,
      y: 16,
      duration: 0.5,
      delay: i * 0.05,
      ease: "power3.out",
      scrollTrigger: { trigger: "#geo", start: "top 85%", once: true },
    });
  });
  // Counter animado
if (countEl) {
  const target = Number(countEl.dataset.count || "0");

  const counter = { val: 0 }; // objeto a animar
  gsap.fromTo(
    counter,                         // target
    { val: 0 },                      // estado inicial
    { 
      val: target, 
      duration: 0.9, 
      delay: 0.15, 
      ease: "power2.out",
      onUpdate: () => {
        countEl.textContent = Math.round(counter.val).toString();
      },
      scrollTrigger: { 
        trigger: "#geo", 
        start: "top 85%", 
        once: true 
      }
    }
  );
}


  // Micro-interacción: pulso en el punto rojo al hover/focus
  chips.forEach((chip, i) => {
    const dot = dots[i];
    if (!dot) return;
    const tl = gsap.timeline({ });
    tl.to(dot, { scale: 1.25, duration: 0.12, ease: "power2.out" })
      .to(dot, { scale: 1, duration: 0.18, ease: "power2.inOut" });

  });

  // Parallax sutil de los SVG decorativos
  const decors = document.querySelectorAll<SVGElement>("#geo svg");
  decors.forEach((el, i) => {
    gsap.to(el, {
      y: i % 2 ? 12 : -10,
      rotate: i % 2 ? -2 : 2,
      ease: "none",
      scrollTrigger: { trigger: "#geo", start: "top bottom", end: "bottom top", scrub: 0.5 },
    });
  });
</script>
