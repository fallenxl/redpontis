---
import { Image } from "astro:assets";
import LangSwitcher from "./LangSwitcher.astro";
import logo from "../assets/logo.png";

/** Helper activo por ruta (build-time) */
const currentPath = Astro.url.pathname;
const isActive = (p: string) =>
  currentPath === p || (p !== "/" && currentPath.startsWith(p));

/** Rutas */
type NavLink = { path: string; i18n: string };
const links: NavLink[] = [
  { path: "/",          i18n: "nav.home" },
  { path: "/nosotros",  i18n: "nav.about" },
  { path: "/fabrica",   i18n: "nav.factory" },
  { path: "/contacto",  i18n: "nav.contact" },
];

/** Subsecciones de “Nosotros” */
const aboutSubs = [
  { path: "/casos-de-exito", i18n: "nav.subNav.studyCases", label: "Casos de Éxito" },
];
---

<header id="siteHeader" class="fixed top-0 z-50 w-full bg-white/80 backdrop-blur border-b border-neutral-200/60 py-2">
  <nav class="mx-auto max-w-7xl px-4 md:px-6">
    <div class="flex h-16 items-center justify-between gap-4">
      <!-- Logo -->
      <a href="/" class="flex items-center gap-3">
        <Image src={logo} alt="Red Pontis" class="h-14 w-auto select-none" />
        <span class="sr-only" data-i18n="brand.name">Red Pontis</span>
      </a>

      <!-- Desktop -->
      <div class="hidden md:flex items-center gap-4">
        <ul class="flex items-center gap-1 rounded-2xl bg-[#575756]/10 p-1">
          {links.map((l) => (
            <li class="relative">
              {
                l.path === "/nosotros"
                  ? (
                    /* Item especial: link directo + dropdown en hover/focus */
                    <div class="group/nav relative">
                      <a
                        href={l.path}
                        class={`flex items-center gap-2 rounded-xl px-4 py-2 text-sm font-medium transition-colors ${
                          isActive(l.path)
                            ? "text-[#B41A1D] bg-[#B41A1D]/10"
                            : "text-[#575756] hover:text-[#B41A1D] hover:bg-[#B41A1D]/10"
                        }`}
                        aria-haspopup="true"
                        aria-expanded="false"
                        id="aboutTrigger"
                      >
                        <span data-i18n={l.i18n}>Nosotros</span>
                        <!-- caret visual (solo decorativo) -->
                        <svg class="h-4 w-4 opacity-70" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                          <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 10.96l3.71-3.73a.75.75 0 111.08 1.04l-4.25 4.27a.75.75 0 01-1.08 0L5.21 8.27a.75.75 0 01.02-1.06z" clip-rule="evenodd"/>
                        </svg>
                      </a>

                      <!-- Dropdown -->
                      <div
                        id="aboutDropdown"
                        class="pointer-events-none absolute left-0 top-[calc(100%)] min-w-[180px] rounded-xl border border-[#575756]/15 bg-white shadow-lg opacity-0 translate-y-2 will-change-transform"
                      >
                        <ul class="">
                          {aboutSubs.map((s) => (
                            <li>
                              <a
                                href={s.path}
                                data-i18n="nav.subNav.studyCases"
                                class="block px-4 py-3 text-sm text-[#575756] hover:text-[#B41A1D] rounded-xl"
                              >
                                {s.label}
                              </a>
                            </li>
                          ))}
                        </ul>
                      </div>
                    </div>
                  )
                  : (
                    <a
                      href={l.path}
                      class={`block rounded-xl px-4 py-2 text-sm font-medium transition-colors ${
                        isActive(l.path)
                          ? "text-[#B41A1D] bg-[#B41A1D]/10"
                          : "text-[#575756] hover:text-[#B41A1D] hover:bg-[#B41A1D]/10"
                      }`}
                    >
                      <span data-i18n={l.i18n}>Inicio</span>
                    </a>
                  )
              }
            </li>
          ))}
        </ul>

        <!-- Lang Switcher (desktop) -->
        <LangSwitcher />
      </div>

      <!-- Toggle Móvil -->
      <button
        id="menuToggle"
        aria-controls="mobileMenu"
        aria-expanded="false"
        class="md:hidden inline-flex items-center justify-center rounded-lg border border-[#575756]/30 px-3 py-2 text-[#575756] hover:bg-[#575756]/10 active:scale-95 transition"
      >
        <span class="sr-only" data-i18n="ui.openMenu">Abrir menú</span>
        <svg class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" aria-hidden="true">
          <path stroke-linecap="round" stroke-width="2" d="M4 7h16M4 12h16M4 17h16" />
        </svg>
      </button>
    </div>

    <!-- Menú Móvil -->
    <div id="mobileMenu" class="hidden md:hidden origin-top  overflow-hidden">
      <div class="my-3 rounded-2xl border border-[#575756]/20 bg-white shadow-sm">
        <!-- Lang Switcher Mobile -->
        <div class="px-4 py-3 border-b border-[#575756]/10 flex justify-between items-center">
          <span class="text-sm text-[#575756]" data-i18n="ui.language">Idioma</span>
          <LangSwitcher />
        </div>

        <ul class="divide-y divide-[#575756]/10">
          {links.map((l) => (
            <li>
              <a
                href={l.path}
                class={`block px-4 py-3 text-[15px] font-medium transition-colors ${
                  isActive(l.path) ? "text-[#B41A1D]" : "text-[#575756] hover:text-[#B41A1D]"
                }`}
              >
                <span data-i18n={l.i18n}>Inicio</span>
              </a>

              {l.path === "/nosotros" && (
                <ul class="pl-6 pb-2">
                  {aboutSubs.map((s) => (
                    <li>
                      <a
                        href={s.path}
                        data-i18n="nav.subNav.studyCases"
                        class="block py-2 text-sm text-[#575756] hover:text-[#B41A1D]"
                      >
                        {s.label}
                      </a>
                    </li>
                  ))}
                </ul>
              )}
            </li>
          ))}
        </ul>
      </div>
    </div>
  </nav>
</header>

<script>
  import gsap from "gsap";

  const header = document.querySelector<HTMLElement>("#siteHeader")!;
  const menuToggle = document.querySelector<HTMLButtonElement>("#menuToggle")!;
  const mobileMenu = document.querySelector<HTMLDivElement>("#mobileMenu")!;

  // Sombra en scroll (igual que antes)
  let lastY = 0;
  window.addEventListener("scroll", () => {
    const scrolled = window.scrollY > 8;
    if (scrolled && lastY <= 8) gsap.to(header, { duration: 0.25, boxShadow: "0 6px 24px rgba(0,0,0,0.08)" });
    else if (!scrolled && lastY > 8) gsap.to(header, { duration: 0.25, boxShadow: "0 0 0 rgba(0,0,0,0)" });
    lastY = window.scrollY;
  });

  // ========= Menú móvil (sin scale, con medición correcta) =========
  let isOpen = false;

  function measureOpenHeight(el: HTMLElement) {
    // Limpia transforms y deja que calcule su alto natural
    gsap.set(el, { clearProps: "transform", height: "auto", opacity: 1, pointerEvents: "auto" });
    // Usa scrollHeight (no se ve afectado por transforms)
    return el.scrollHeight;
  }

  function openMenu() {
    if (isOpen) return;
    isOpen = true;
    menuToggle.setAttribute("aria-expanded", "true");

    gsap.killTweensOf(mobileMenu);
    // Estado de partida colapsado
    gsap.set(mobileMenu, { overflow: "hidden", opacity: 0, height: 0, pointerEvents: "auto", display: "block" });

    const h = measureOpenHeight(mobileMenu);

    gsap.fromTo(
      mobileMenu,
      { height: 0, opacity: 0 },
      {
        height: h,
        opacity: 1,
        duration: 0.28,
        ease: "power2.out",
        onComplete: () => {
          // Deja height en auto para que el contenido interno pueda crecer/achicar
          gsap.set(mobileMenu, { height: "auto" });
        }
      }
    );
  }

  function closeMenu() {
    if (!isOpen) return;
    isOpen = false;
    menuToggle.setAttribute("aria-expanded", "false");

    gsap.killTweensOf(mobileMenu);

    // Medimos el alto actual (puede estar en 'auto')
    const current = mobileMenu.getBoundingClientRect().height || mobileMenu.scrollHeight;

    gsap.fromTo(
      mobileMenu,
      { height: current, opacity: 1 },
      {
        height: 0,
        opacity: 0,
        duration: 0.24,
        ease: "power2.in",
        onComplete: () => {
          // Desactiva interacción cuando está cerrado
          gsap.set(mobileMenu, { pointerEvents: "none" });
        }
      }
    );
  }

  // Toggle con guard contra doble click / tweens activos
  menuToggle.addEventListener("click", (e) => {
    e.preventDefault();
    if (gsap.isTweening(mobileMenu)) return; // evita “doble toque” en animación
    isOpen ? closeMenu() : openMenu();
  });

  // Cierra al navegar dentro del menú en mobile
  mobileMenu.addEventListener("click", (e) => {
    const t = e.target as HTMLElement;
    if (t && t.closest("a")) closeMenu();
  });

  // Auto-reset al cambiar a desktop
  const mq = window.matchMedia("(min-width: 768px)");
  const syncByMQ = () => {
    if (mq.matches) {
      // En desktop: asegúrate de que esté cerrado visualmente para no interferir
      isOpen = false;
      menuToggle.setAttribute("aria-expanded", "false");
      gsap.set(mobileMenu, { height: 0, opacity: 0, pointerEvents: "none" });
    }
  };
  mq.addEventListener?.("change", syncByMQ);
  syncByMQ();

  // ========= Dropdown “Nosotros” (desktop) =========
  const aboutWrap = document.querySelector<HTMLDivElement>(".group\\/nav");
  const aboutDropdown = document.querySelector<HTMLDivElement>("#aboutDropdown");
  const aboutTrigger = document.querySelector<HTMLAnchorElement>("#aboutTrigger");

  if (aboutWrap && aboutDropdown && aboutTrigger) {
    let over = false;
    const tl = gsap.timeline({ paused: true });
    tl.fromTo(aboutDropdown, { opacity: 0, y: 8 }, { opacity: 1, y: 0, duration: 0.22, ease: "power2.out" });

    const show = () => {
      if (over) return;
      over = true;
      aboutDropdown.style.pointerEvents = "auto";
      tl.play(0);
      aboutTrigger.setAttribute("aria-expanded", "true");
    };
    const hide = () => {
      over = false;
      gsap.to(aboutDropdown, {
        opacity: 0,
        y: 8,
        duration: 0.18,
        ease: "power2.in",
        onComplete: () => {
          if (!over) aboutDropdown.style.pointerEvents = "none";
          aboutTrigger.setAttribute("aria-expanded", "false");
        },
      });
    };

    aboutWrap.addEventListener("mouseenter", show);
    aboutWrap.addEventListener("mouseleave", hide);
    aboutTrigger.addEventListener("focus", show);
    aboutDropdown.addEventListener("focusout", (e: FocusEvent) => {
      const related = e.relatedTarget as HTMLElement | null;
      if (!related || !aboutWrap.contains(related)) hide();
    });
  }

  // i18n refresco
  window.addEventListener("rp:langchange", () => {
    (window as any).rpI18n?.apply?.(document.getElementById("siteHeader")!);
  });
</script>
